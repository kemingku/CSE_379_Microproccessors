


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             interrupts, CODE, READWRITE
    2 00000000                 EXPORT           lab5
    3 00000000                 EXPORT           FIQ_Handler
    4 00000000                 EXPORT           interrupt_init
    5 00000000                 EXTERN           setup
    6 00000000                 EXTERN           output_string
    7 00000000                 EXTERN           read_string
    8 00000000                 EXTERN           read_character
    9 00000000                 EXTERN           output_character
   10 00000000                 EXTERN           display_digit_on_7_seg
   11 00000000         
   12 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   13 00000000 E000C008 
                       U0IIR   EQU              0xE000C008  ;  UART0 Interrupt 
                                                            Identification Regi
                                                            ster
   14 00000000 E000C004 
                       U0IER   EQU              0xE000C004  ; UART0 interrupt e
                                                            nable register
   15 00000000 E01FC140 
                       EXTINT  EQU              0xE01FC140  ;  External Interru
                                                            pt Flag Register
   16 00000000         
   17 00000000 57 65 6C 
              63 6F 6D 
              65 20 74 
              6F 20 6C 
              61 62 20 
              23 35 00 prompt  =                "Welcome to lab #5",0
   18 00000012 49 6E 74 
              65 72 72 
              75 70 74 
              00       prompt1 =                "Interrupt",0
   19 0000001C         
   20 0000001C         ;///////////////////////////////////////////////////////
                       //////////////////
   21 0000001C         ;function 3 strings
   22 0000001C 0C 45 6E 
              74 65 72 
              20 61 20 
              63 68 61 
              72 61 63 
              74 65 72 
              20 66 72 
              6F 6D 20 
              30 2D 39 
              20 41 2D 
              46 2E 20 
              0A 0D 0A 
              0D 20 20 
              20 20 20 
              20 49 6E 
              20 75 70 
              70 65 72 
              63 61 73 
              65 20 77 
              69 74 68 
              20 41 20 



ARM Macro Assembler    Page 2 


              72 65 70 
              72 65 73 
              65 6E 74 
              69 6E 67 
              20 31 30 
              20 61 6E 
              64 20 46 
              20 72 65 
              70 72 65 
              73 65 6E 
              74 69 6E 
              67 20 31 
              35 20 72 
              65 73 70 
              65 63 74 
              69 76 65 
              6C 79 2E 
              0A 0D 00 seg1    =                "\fEnter a character from 0-9 A
-F. \n\r\n\r      In uppercase with A representing 10 and F representing 15 res
pectively.\n\r", 0
   23 00000091 0A 0D 20 
              20 20 20 
              20 20 54 
              68 65 20 
              6E 75 6D 
              62 65 72 
              20 77 69 
              6C 6C 20 
              62 65 20 
              64 69 73 
              70 6C 61 
              79 65 64 
              20 6F 6E 
              20 74 68 
              65 20 73 
              65 76 65 
              6E 20 73 
              65 67 6D 
              65 6E 74 
              20 64 69 
              73 70 6C 
              61 79 20 
              61 73 20 
              68 65 78 
              61 64 65 
              63 69 6D 
              61 6C 2E 
              0A 0D 0A 
              0D 43 61 
              75 74 69 
              6F 6E 3A 
              20 57 68 
              65 6E 20 
              74 68 65 
              20 37 20 
              73 65 67 
              6D 65 6E 
              74 20 69 
              73 20 74 



ARM Macro Assembler    Page 3 


              75 72 6E 
              65 64 20 
              6F 6E 20 
              66 6F 72 
              20 74 68 
              65 20 66 
              69 72 73 
              74 20 74 
              69 6D 65 
              2C 20 6F 
              6E 6C 79 
              20 74 68 
              65 20 67 
              20 73 65 
              67 6D 65 
              6E 74 20 
              73 68 6F 
              75 6C 64 
              20 62 65 
              20 74 75 
              72 6E 65 
              64 20 6F 
              6E 0A 0D 
              00       seg2    =                "\n\r      The number will be d
isplayed on the seven segment display as hexadecimal.\n\r\n\rCaution: When the 
7 segment is turned on for the first time, only the g segment should be turned 
on\n\r", 0
   24 0000014C 0A 0D 0A 
              0D 50 72 
              65 73 73 
              20 71 20 
              74 6F 20 
              65 78 69 
              74 20 61 
              74 20 61 
              6E 79 20 
              74 69 6D 
              65 2E 0A 
              0D 0A 0D 
              00       seg3    =                "\n\r\n\rPress q to exit at any
 time.\n\r\n\r", 0
   25 00000171         ;///////////////////////////////////////////////////////
                       //////////////////
   26 00000171         
   27 00000171 0C 0A 0D 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              57 65 20 
              61 72 65 
              20 64 6F 
              6E 65 20 
              42 6F 79 
              79 79 79 
              79 79 00 exit    =                "\f\n\r                  We are
 done Boyyyyyy",0



ARM Macro Assembler    Page 4 


   28 0000019B         
   29 0000019B 00              ALIGN
   30 0000019C         
   31 0000019C         lab5
   32 0000019C E92D4000        STMFD            sp!, {lr}
   33 000001A0         
   34 000001A0 E3A07001        MOV              r7, #1
   35 000001A4 E3A06000        MOV              r6, #0
   36 000001A8         
   37 000001A8 EBFFFFFE        BL               setup
   38 000001AC         
   39 000001AC         
   40 000001AC         ;This block prints instructions for the program
   41 000001AC         function_seg
   42 000001AC E59F1124        LDR              r1, =seg1
   43 000001B0 EBFFFFFE        BL               output_string
   44 000001B4 E59F1120        LDR              r1, =seg2
   45 000001B8 EBFFFFFE        BL               output_string
   46 000001BC E59F111C        LDR              r1, =seg3
   47 000001C0 EBFFFFFE        BL               output_string
   48 000001C4         ; End of priting instructions
   49 000001C4         
   50 000001C4         
   51 000001C4         loop_begin
   52 000001C4         
   53 000001C4 EAFFFFFE        B                loop_begin  ;Infinite loop
   54 000001C8         
   55 000001C8         
   56 000001C8         interrupt_init
   57 000001C8 E92D4007        STMFD            SP!, {r0-r2, lr} 
                                                            ; Save registers 
   58 000001CC         
   59 000001CC         
   60 000001CC         ; Push button setup   
   61 000001CC E59F0110        LDR              r0, =0xE002C000
   62 000001D0 E5901000        LDR              r1, [r0]
   63 000001D4 E3811202        ORR              r1, r1, #0x20000000
   64 000001D8 E3C11201        BIC              r1, r1, #0x10000000
   65 000001DC E5801000        STR              r1, [r0]    ; PINSEL0 bits 29:2
                                                            8 = 10
   66 000001E0         
   67 000001E0         ; Classify sources as IRQ or FIQ
   68 000001E0 E59F0100        LDR              r0, =0xFFFFF000
   69 000001E4 E590100C        LDR              r1, [r0, #0xC]
   70 000001E8 E59F20FC        LDR              r2, =0x8040 ;Classifies UART0 a
                                                            nd Push button as F
                                                            IQ
   71 000001EC E1811002        ORR              r1, r1, r2
   72 000001F0 E580100C        STR              r1, [r0, #0xC]
   73 000001F4         
   74 000001F4         ; Enable Interrupts
   75 000001F4 E59F00EC        LDR              r0, =0xFFFFF000
   76 000001F8 E5901010        LDR              r1, [r0, #0x10]
   77 000001FC E59F20E8        LDR              r2, =0x8040 ;Enables UART0 and 
                                                            Push button interru
                                                            pts
   78 00000200 E1811002        ORR              r1, r1 ,r2
   79 00000204 E5801010        STR              r1, [r0, #0x10]
   80 00000208         



ARM Macro Assembler    Page 5 


   81 00000208         ;Enable UART0 interrupts
   82 00000208 E59F00E0        LDR              r0, =U0IER
   83 0000020C E5901000        LDR              r1, [r0]
   84 00000210 E3811001        ORR              r1, r1, #1  ; Enables UART0 int
                                                            errupts
   85 00000214 E5801000        STR              r1, [r0]
   86 00000218         
   87 00000218         ; External Interrupt 1 setup for edge sensitive
   88 00000218 E59F00D4        LDR              r0, =0xE01FC148
   89 0000021C E5901000        LDR              r1, [r0]
   90 00000220 E3811002        ORR              r1, r1, #2  ; EINT1 = Edge Sens
                                                            itive
   91 00000224 E5801000        STR              r1, [r0]
   92 00000228         
   93 00000228         ; Enable FIQ's, Disable IRQ's
   94 00000228 E10F0000        MRS              r0, CPSR
   95 0000022C E3C00040        BIC              r0, r0, #0x40
   96 00000230 E3800080        ORR              r0, r0, #0x80
   97 00000234 E121F000        MSR              CPSR_c, r0
   98 00000238         
   99 00000238 E8BD4007        LDMFD            SP!, {r0-r2, lr} 
                                                            ; Restore registers
                                                            
  100 0000023C E12FFF1E        BX               lr          ; Return
  101 00000240         
  102 00000240         
  103 00000240         
  104 00000240         FIQ_Handler
  105 00000240 E92D400F        STMFD            SP!, {r0-r3, lr} 
                                                            ; Save registers 
  106 00000244         
  107 00000244         EINT1                                ; Check for EINT1 i
                                                            nterrupt
  108 00000244 E59F00AC        LDR              r0, =0xE01FC140
  109 00000248 E5901000        LDR              r1, [r0]
  110 0000024C E3110002        TST              r1, #2      ; paired up: branch
                                                             to push_case , not
                                                             paired up jump FIQ
                                                            _Exit
  111 00000250 0A000000        BEQ              UART0
  112 00000254 EA000004        B                push_case
  113 00000258         
  114 00000258         UART0                                ; Check for UART0 i
                                                            nterrupt by lookiin
                                                            g at bit 0 of U0IIR
                                                            , 1 no interrupt, 0
                                                             pending interrupt 
                                                            
  115 00000258 E59F009C        LDR              r0, =U0IIR
  116 0000025C E5901000        LDR              r1, [r0]
  117 00000260 E3110001        TST              r1, #1      ; Paired up: branch
                                                             to FIQ_exit, not p
                                                            aired up branch to 
                                                            uart0_case 
  118 00000264 1A000011        BNE              FIQ_Exit
  119 00000268 EA000007        B                uart0_case
  120 0000026C         
  121 0000026C         push_case
  122 0000026C E92D400F        STMFD            SP!, {r0-r3, lr} 



ARM Macro Assembler    Page 6 


                                                            ; Save registers 
  123 00000270         
  124 00000270 E0467007        SUB              r7, r6, r7  ; Changes sign of r
                                                            7 (corresponds to o
                                                            n off) positive off
                                                            , negative on
  125 00000274 E1A00004        MOV              r0, r4      ; Loads previous st
                                                            ate to be turned on
                                                            
  126 00000278 EBFFFFFE        BL               display_digit_on_7_seg
  127 0000027C         
  128 0000027C E8BD400F        LDMFD            SP!, {r0-r3, lr} 
                                                            ; Restore registers
                                                            
  129 00000280         
  130 00000280 E3811002        ORR              r1, r1, #2  ; Clear Interrupt
  131 00000284 E5801000        STR              r1, [r0]
  132 00000288 EA000008        B                FIQ_Exit
  133 0000028C         
  134 0000028C         uart0_case
  135 0000028C E92D400F        STMFD            SP!, {r0-r3, lr} 
                                                            ; Save registers 
  136 00000290         
  137 00000290 E59F1068        LDR              r1, =0xE000C000
  138 00000294 E5910000        LDR              r0, [r1]    ; Reads character f
                                                            rom recieve registe
                                                            r
  139 00000298 EBFFFFFE        BL               output_character ; Echoes back 
                                                            to putty
  140 0000029C         
  141 0000029C E3500071        CMP              r0, #0x71   ; If read character
                                                             is q terminate pro
                                                            gram, otherwise dis
                                                            play on 7 segment
  142 000002A0 0A000004        BEQ              menu_exit
  143 000002A4         
  144 000002A4 EBFFFFFE        BL               display_digit_on_7_seg
  145 000002A8         
  146 000002A8 E8BD400F        LDMFD            SP!, {r0-r3, lr}
  147 000002AC EAFFFFFF        B                FIQ_Exit
  148 000002B0         
  149 000002B0         FIQ_Exit
  150 000002B0 E8BD400F        LDMFD            SP!, {r0-r3, lr}
  151 000002B4 E25EF004        SUBS             pc, lr, #4
  152 000002B8         
  153 000002B8         menu_exit
  154 000002B8 E59F1044        LDR              r1, =exit
  155 000002BC EBFFFFFE        BL               output_string
  156 000002C0         
  157 000002C0 E3570000        CMP              r7, #0      ;turns off 7 segmen
                                                            t if it is currentl
                                                            y on when program e
                                                            nds
  158 000002C4 CA000001        BGT              exit_program
  159 000002C8 E0467007        SUB              r7, r6, r7
  160 000002CC EBFFFFFE        BL               display_digit_on_7_seg
  161 000002D0         
  162 000002D0         exit_program
  163 000002D0         



ARM Macro Assembler    Page 7 


  164 000002D0 E8BD4000        LDMFD            SP!, {lr}   ; Restore register 
                                                            lr from stack 
  165 000002D4 E12FFF1E        BX               LR
  166 000002D8         
  167 000002D8                 END
              00000000 
              00000000 
              00000000 
              E002C000 
              FFFFF000 
              00008040 
              E000C004 
              E01FC148 
              E01FC140 
              E000C008 
              E000C000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab5.d -o.\objects\lab5.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 524" --list=.\listings\lab5.lst lab5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EINT1 00000244

Symbol: EINT1
   Definitions
      At line 107 in file lab5.s
   Uses
      None
Comment: EINT1 unused
FIQ_Exit 000002B0

Symbol: FIQ_Exit
   Definitions
      At line 149 in file lab5.s
   Uses
      At line 118 in file lab5.s
      At line 132 in file lab5.s
      At line 147 in file lab5.s

FIQ_Handler 00000240

Symbol: FIQ_Handler
   Definitions
      At line 104 in file lab5.s
   Uses
      At line 3 in file lab5.s
Comment: FIQ_Handler used once
UART0 00000258

Symbol: UART0
   Definitions
      At line 114 in file lab5.s
   Uses
      At line 111 in file lab5.s
Comment: UART0 used once
exit 00000171

Symbol: exit
   Definitions
      At line 27 in file lab5.s
   Uses
      At line 154 in file lab5.s
Comment: exit used once
exit_program 000002D0

Symbol: exit_program
   Definitions
      At line 162 in file lab5.s
   Uses
      At line 158 in file lab5.s
Comment: exit_program used once
function_seg 000001AC

Symbol: function_seg
   Definitions
      At line 41 in file lab5.s
   Uses
      None
Comment: function_seg unused
interrupt_init 000001C8



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: interrupt_init
   Definitions
      At line 56 in file lab5.s
   Uses
      At line 4 in file lab5.s
Comment: interrupt_init used once
interrupts 00000000

Symbol: interrupts
   Definitions
      At line 1 in file lab5.s
   Uses
      None
Comment: interrupts unused
lab5 0000019C

Symbol: lab5
   Definitions
      At line 31 in file lab5.s
   Uses
      At line 2 in file lab5.s
Comment: lab5 used once
loop_begin 000001C4

Symbol: loop_begin
   Definitions
      At line 51 in file lab5.s
   Uses
      At line 53 in file lab5.s
Comment: loop_begin used once
menu_exit 000002B8

Symbol: menu_exit
   Definitions
      At line 153 in file lab5.s
   Uses
      At line 142 in file lab5.s
Comment: menu_exit used once
prompt 00000000

Symbol: prompt
   Definitions
      At line 17 in file lab5.s
   Uses
      None
Comment: prompt unused
prompt1 00000012

Symbol: prompt1
   Definitions
      At line 18 in file lab5.s
   Uses
      None
Comment: prompt1 unused
push_case 0000026C

Symbol: push_case
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 121 in file lab5.s
   Uses
      At line 112 in file lab5.s
Comment: push_case used once
seg1 0000001C

Symbol: seg1
   Definitions
      At line 22 in file lab5.s
   Uses
      At line 42 in file lab5.s
Comment: seg1 used once
seg2 00000091

Symbol: seg2
   Definitions
      At line 23 in file lab5.s
   Uses
      At line 44 in file lab5.s
Comment: seg2 used once
seg3 0000014C

Symbol: seg3
   Definitions
      At line 24 in file lab5.s
   Uses
      At line 46 in file lab5.s
Comment: seg3 used once
uart0_case 0000028C

Symbol: uart0_case
   Definitions
      At line 134 in file lab5.s
   Uses
      At line 119 in file lab5.s
Comment: uart0_case used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

EXTINT E01FC140

Symbol: EXTINT
   Definitions
      At line 15 in file lab5.s
   Uses
      None
Comment: EXTINT unused
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 12 in file lab5.s
   Uses
      None
Comment: IO0DIR unused
U0IER E000C004

Symbol: U0IER
   Definitions
      At line 14 in file lab5.s
   Uses
      At line 82 in file lab5.s
Comment: U0IER used once
U0IIR E000C008

Symbol: U0IIR
   Definitions
      At line 13 in file lab5.s
   Uses
      At line 115 in file lab5.s
Comment: U0IIR used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

display_digit_on_7_seg 00000000

Symbol: display_digit_on_7_seg
   Definitions
      At line 10 in file lab5.s
   Uses
      At line 126 in file lab5.s
      At line 144 in file lab5.s
      At line 160 in file lab5.s

output_character 00000000

Symbol: output_character
   Definitions
      At line 9 in file lab5.s
   Uses
      At line 139 in file lab5.s
Comment: output_character used once
output_string 00000000

Symbol: output_string
   Definitions
      At line 6 in file lab5.s
   Uses
      At line 43 in file lab5.s
      At line 45 in file lab5.s
      At line 47 in file lab5.s
      At line 155 in file lab5.s

read_character 00000000

Symbol: read_character
   Definitions
      At line 8 in file lab5.s
   Uses
      None
Comment: read_character unused
read_string 00000000

Symbol: read_string
   Definitions
      At line 7 in file lab5.s
   Uses
      None
Comment: read_string unused
setup 00000000

Symbol: setup
   Definitions
      At line 5 in file lab5.s
   Uses
      At line 37 in file lab5.s
Comment: setup used once
6 symbols
363 symbols in table
